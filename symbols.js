// symbol index generated by DDOX - do not edit
var symbols = [
{name: 'checkit.assertion', kind: "module", path: './checkit/assertion.html', attributes: []},
{name: 'checkit.assertion.shouldBeBetween', kind: "functiondeclaration", path: './checkit/assertion/shouldBeBetween.html', attributes: []},
{name: 'checkit.assertion.shouldBeBetweenOrEqual', kind: "functiondeclaration", path: './checkit/assertion/shouldBeBetweenOrEqual.html', attributes: []},
{name: 'checkit.assertion.shouldBeContain', kind: "functiondeclaration", path: './checkit/assertion/shouldBeContain.html', attributes: []},
{name: 'checkit.assertion.shouldBeEmpty', kind: "functiondeclaration", path: './checkit/assertion/shouldBeEmpty.html', attributes: []},
{name: 'checkit.assertion.shouldBeEqualJSON', kind: "functiondeclaration", path: './checkit/assertion/shouldBeEqualJSON.html', attributes: []},
{name: 'checkit.assertion.shouldBeFalse', kind: "functiondeclaration", path: './checkit/assertion/shouldBeFalse.html', attributes: []},
{name: 'checkit.assertion.shouldBeGreater', kind: "functiondeclaration", path: './checkit/assertion/shouldBeGreater.html', attributes: []},
{name: 'checkit.assertion.shouldBeGreaterOrEqual', kind: "functiondeclaration", path: './checkit/assertion/shouldBeGreaterOrEqual.html', attributes: []},
{name: 'checkit.assertion.shouldBeIn', kind: "functiondeclaration", path: './checkit/assertion/shouldBeIn.html', attributes: []},
{name: 'checkit.assertion.shouldBeInstanceOf', kind: "functiondeclaration", path: './checkit/assertion/shouldBeInstanceOf.html', attributes: []},
{name: 'checkit.assertion.shouldBeLess', kind: "functiondeclaration", path: './checkit/assertion/shouldBeLess.html', attributes: []},
{name: 'checkit.assertion.shouldBeLessOrEqual', kind: "functiondeclaration", path: './checkit/assertion/shouldBeLessOrEqual.html', attributes: []},
{name: 'checkit.assertion.shouldBeNotEmpty', kind: "functiondeclaration", path: './checkit/assertion/shouldBeNotEmpty.html', attributes: []},
{name: 'checkit.assertion.shouldBeNull', kind: "functiondeclaration", path: './checkit/assertion/shouldBeNull.html', attributes: []},
{name: 'checkit.assertion.shouldBeTrue', kind: "functiondeclaration", path: './checkit/assertion/shouldBeTrue.html', attributes: []},
{name: 'checkit.assertion.shouldEqual', kind: "functiondeclaration", path: './checkit/assertion/shouldEqual.html', attributes: []},
{name: 'checkit.assertion.shouldNotBeNull', kind: "functiondeclaration", path: './checkit/assertion/shouldNotBeNull.html', attributes: []},
{name: 'checkit.assertion.shouldNotEqual', kind: "functiondeclaration", path: './checkit/assertion/shouldNotEqual.html', attributes: []},
{name: 'checkit.assertion.shouldNotThrow', kind: "functiondeclaration", path: './checkit/assertion/shouldNotThrow.html', attributes: []},
{name: 'checkit.assertion.shouldRunLess', kind: "functiondeclaration", path: './checkit/assertion/shouldRunLess.html', attributes: []},
{name: 'checkit.assertion.shouldThrow', kind: "functiondeclaration", path: './checkit/assertion/shouldThrow.html', attributes: []},
{name: 'checkit.assertion.shouldThrowWithMessage', kind: "functiondeclaration", path: './checkit/assertion/shouldThrowWithMessage.html', attributes: []},
{name: 'checkit.bdd', kind: "module", path: './checkit/bdd.html', attributes: []},
{name: 'checkit.bdd.given', kind: "functiondeclaration", path: './checkit/bdd/given.html', attributes: []},
{name: 'checkit.bdd.scenario', kind: "functiondeclaration", path: './checkit/bdd/scenario.html', attributes: []},
{name: 'checkit.bdd.then', kind: "functiondeclaration", path: './checkit/bdd/then.html', attributes: []},
{name: 'checkit.bdd.when', kind: "functiondeclaration", path: './checkit/bdd/when.html', attributes: []},
{name: 'checkit.block', kind: "module", path: './checkit/block.html', attributes: []},
{name: 'checkit.block.GivenBlock', kind: "classdeclaration", path: './checkit/block/GivenBlock.html', attributes: []},
{name: 'checkit.block.GivenBlock.this', kind: "functiondeclaration", path: './checkit/block/GivenBlock.this.html', attributes: []},
{name: 'checkit.block.TestBlock.getCallback', kind: "functiondeclaration", path: './checkit/block/TestBlock.getCallback.html', attributes: ["final"]},
{name: 'checkit.block.TestBlock.getName', kind: "functiondeclaration", path: './checkit/block/TestBlock.getName.html', attributes: ["final"]},
{name: 'checkit.block.TestBlock.getUUID', kind: "functiondeclaration", path: './checkit/block/TestBlock.getUUID.html', attributes: ["final"]},
{name: 'checkit.block.ScenarioBlock', kind: "classdeclaration", path: './checkit/block/ScenarioBlock.html', attributes: []},
{name: 'checkit.block.ScenarioBlock.getTags', kind: "functiondeclaration", path: './checkit/block/ScenarioBlock.getTags.html', attributes: ["final"]},
{name: 'checkit.block.ScenarioBlock.this', kind: "functiondeclaration", path: './checkit/block/ScenarioBlock.this.html', attributes: []},
{name: 'checkit.block.TestBlock', kind: "classdeclaration", path: './checkit/block/TestBlock.html', attributes: []},
{name: 'checkit.block.TestBlock.this', kind: "functiondeclaration", path: './checkit/block/TestBlock.this.html', attributes: []},
{name: 'checkit.block.ThenBlock', kind: "classdeclaration", path: './checkit/block/ThenBlock.html', attributes: []},
{name: 'checkit.block.WhenBlock', kind: "classdeclaration", path: './checkit/block/WhenBlock.html', attributes: []},
{name: 'checkit.blockmanager', kind: "module", path: './checkit/blockmanager.html', attributes: []},
{name: 'checkit.blockmanager.BlockManager', kind: "classdeclaration", path: './checkit/blockmanager/BlockManager.html', attributes: []},
{name: 'checkit.blockmanager.BlockManager.addBlock', kind: "functiondeclaration", path: './checkit/blockmanager/BlockManager.addBlock.html', attributes: []},
{name: 'checkit.blockmanager.BlockManager.getByType', kind: "functiondeclaration", path: './checkit/blockmanager/BlockManager.getByType.html', attributes: []},
{name: 'checkit.blockmanager.BlockManager.removeBlockByUUID', kind: "functiondeclaration", path: './checkit/blockmanager/BlockManager.removeBlockByUUID.html', attributes: ["static"]},
{name: 'checkit.blockmanager.BlockManagerInterface.getByType', kind: "functiondeclaration", path: './checkit/blockmanager/BlockManagerInterface.getByType.html', attributes: []},
{name: 'checkit.blockmanager.BlockManagerInterface', kind: "interfacedeclaration", path: './checkit/blockmanager/BlockManagerInterface.html', attributes: []},
{name: 'checkit.blockmanager.BlockManagerInterface.addBlock', kind: "functiondeclaration", path: './checkit/blockmanager/BlockManagerInterface.addBlock.html', attributes: []},
{name: 'checkit.blockmanager.BlockManagerInterface.removeBlockByUUID', kind: "functiondeclaration", path: './checkit/blockmanager/BlockManagerInterface.removeBlockByUUID.html', attributes: ["static", "abstract"]},
{name: 'checkit.exception', kind: "module", path: './checkit/exception.html', attributes: []},
{name: 'checkit.exception.UnitTestException', kind: "classdeclaration", path: './checkit/exception/UnitTestException.html', attributes: []},
{name: 'checkit.exception.UnitTestException.this', kind: "functiondeclaration", path: './checkit/exception/UnitTestException.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'checkit.mock', kind: "module", path: './checkit/mock.html', attributes: []},
{name: 'checkit.mock.Mock', kind: "classdeclaration", path: './checkit/mock/Mock.html', attributes: []},
{name: 'checkit.mock.Mock.MockAbstract', kind: "classdeclaration", path: './checkit/mock/Mock.MockAbstract.html', attributes: []},
{name: 'checkit.mock.Mock.returnValue', kind: "functiondeclaration", path: './checkit/mock/Mock.returnValue.html', attributes: []},
{name: 'checkit.mock.Mock.this', kind: "functiondeclaration", path: './checkit/mock/Mock.this.html', attributes: []},
{name: 'checkit.mock.Mock._implementation', kind: "variabledeclaration", path: './checkit/mock/Mock._implementation.html', attributes: []},
{name: 'checkit.mock.MockCommon', kind: "templatedeclaration", path: './checkit/mock/MockCommon.html', attributes: []},
{name: 'checkit.mock.MockCommon.expectCalled', kind: "functiondeclaration", path: './checkit/mock/MockCommon.expectCalled.html', attributes: []},
{name: 'checkit.mock.MockCommon.expectNotCalled', kind: "functiondeclaration", path: './checkit/mock/MockCommon.expectNotCalled.html', attributes: []},
{name: 'checkit.reporter', kind: "module", path: './checkit/reporter.html', attributes: []},
{name: 'checkit.reporter.ConsoleReporter', kind: "classdeclaration", path: './checkit/reporter/ConsoleReporter.html', attributes: []},
{name: 'checkit.reporter.ConsoleReporter.fail', kind: "functiondeclaration", path: './checkit/reporter/ConsoleReporter.fail.html', attributes: []},
{name: 'checkit.reporter.ConsoleReporter.printResults', kind: "functiondeclaration", path: './checkit/reporter/ConsoleReporter.printResults.html', attributes: []},
{name: 'checkit.reporter.ConsoleReporter.setVerbose', kind: "functiondeclaration", path: './checkit/reporter/ConsoleReporter.setVerbose.html', attributes: []},
{name: 'checkit.reporter.ConsoleReporter.success', kind: "functiondeclaration", path: './checkit/reporter/ConsoleReporter.success.html', attributes: []},
{name: 'checkit.reporter.ReporterInterface', kind: "interfacedeclaration", path: './checkit/reporter/ReporterInterface.html', attributes: []},
{name: 'checkit.reporter.ReporterInterface.fail', kind: "functiondeclaration", path: './checkit/reporter/ReporterInterface.fail.html', attributes: ["abstract"]},
{name: 'checkit.reporter.ReporterInterface.printResults', kind: "functiondeclaration", path: './checkit/reporter/ReporterInterface.printResults.html', attributes: ["abstract"]},
{name: 'checkit.reporter.ReporterInterface.setVerbose', kind: "functiondeclaration", path: './checkit/reporter/ReporterInterface.setVerbose.html', attributes: ["abstract"]},
{name: 'checkit.reporter.ReporterInterface.success', kind: "functiondeclaration", path: './checkit/reporter/ReporterInterface.success.html', attributes: ["abstract"]},
{name: 'checkit.runner', kind: "module", path: './checkit/runner.html', attributes: []},
{name: 'checkit.runner.BDDTestRunner', kind: "classdeclaration", path: './checkit/runner/BDDTestRunner.html', attributes: []},
{name: 'checkit.runner.BDDTestRunner.run', kind: "functiondeclaration", path: './checkit/runner/BDDTestRunner.run.html', attributes: []},
{name: 'checkit.runner.BDDTestRunner.this', kind: "functiondeclaration", path: './checkit/runner/BDDTestRunner.this.html', attributes: []},
{name: 'checkit.runner.RunnerInterface', kind: "interfacedeclaration", path: './checkit/runner/RunnerInterface.html', attributes: []},
{name: 'checkit.runner.RunnerInterface.run', kind: "functiondeclaration", path: './checkit/runner/RunnerInterface.run.html', attributes: ["abstract"]},
{name: 'checkit', kind: "module", path: './checkit.html', attributes: []},
];
